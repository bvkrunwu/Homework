def filter_by_state(transactions: list[dict[str, str | int]], state: str = "EXECUTED") -> list[dict[str, str | int]]:
    """
    Данная функция получает список транзакций и возвращает новый список,
    включающий только те транзакции, у которых значение ключа 'state'
    совпадает с переданным параметром state. По умолчанию фильтр ищет
    транзакции с состоянием 'EXECUTED'

    Args:
        transactions (list): Список транзакций, представляющих собой словари.
                             Каждая транзакция, должна иметь ключ 'state'.
                             Определяющий её текущее состояние.
        state (str): Строка, определяющая интересующее состояние транзакции.
                     Значением по умолчанию является 'EXECUTED', означающее
                     выполненную транзакцию.

    Returns:
        list: Отфильтрованный список транзакций, удовлетворяющий условиям
              выбора по переданному состоянию.
    """

    # Создаем пустой список для хранения отобранных транзакций
    filtered_transactions = []

    # Проходим циклом по каждой транзакции в переданном списке
    for transaction in transactions:
        # Проверяем, соответствует ли состояние текущей транзакции запрашиваемое
        if transaction.get("state") == state:
            # Добавляем подходящую транзакцию в результирующий список
            filtered_transactions.append(transaction)

    # Добавляем итоговый список отфильтрованных транзакций
    return filtered_transactions


def sort_by_date(operations: list[dict[str, str | int]], ascending: bool = False) -> list[dict[str, str | int]]:
    """
    Эта функция получает список операций и упорядочивает их по значению ключа 'date'.
    Направление сортировки определяется параметром ascending: True означает возрастание,
    False (по умолчанию) - убывание.

    Args:
        operations (list): Список операций, каждая операция представлена в виде словаря,
                           содержащего среди прочих полей обязательный ключ 'date'.
                           содержащий строку с датой операции.
        ascending (bool, optional): Параметр, определяющий порядок сортировки.
                                    Значение по умолчанию равно False, что соответствует
                                    сортировке по убыванию (от новых к старым).

    Returns:
        list: Отсортированный список операций.
    """

    # Производим сортировку по дате
    sorted_operations = sorted(operations, key=lambda x: x["date"], reverse=not ascending)

    # Возвращаем отсортированный список операций
    return sorted_operations
